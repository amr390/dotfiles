<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ctx="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="environmentVariablesConfiguration" factory-bean="encryptionConfigFactory" factory-method="createEncryptionConfig"/>

    <bean id="configurationEncryptor"
          class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
        <property name="config" ref="environmentVariablesConfiguration" />
    </bean>

    <bean id="encryptablePropertyConfigurer" class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
        <constructor-arg ref="configurationEncryptor"/>
        <property name="properties">
            <ref bean="dbProperties"/>
        </property>
        <property name="systemPropertiesMode" value="0"/>
    </bean>

    <!-- add JMX access (see http://fogbugz.atomikos.com/default.asp?community.6.3191.2) -->
    <bean id="jmxTransactionService" class="com.atomikos.icatch.admin.jmx.JmxTransactionService">
        <property name="heuristicsOnly" value="true"/>
    </bean>
    <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true"/>
    </bean>
    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <map>
                <entry key="atomikos:name=tx-service">
                    <ref bean="jmxTransactionService"/>
                </entry>
                <entry key="connectionpool:name=tx-connectionpool">
                    <ref bean="jmxAtomikosConnectionPoolMonitoringService"/>
                </entry>
            </map>
        </property>
        <property name="server">
            <ref bean="mbeanServer"/>
        </property>
    </bean>
    <bean id="jmxAtomikosConnectionPoolMonitoringService" class="be.cipal.datasource.api.helper.JmxAtomikosConnectionPoolMonitoringServiceImpl" depends-on="atomikosDataSourceBean">
        <property name="atomikosDataSourceBean" ref="atomikosDataSourceBean"/>
    </bean>
    <!--  add JMX access-->

    <bean id="atomikosUserTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
         <property name="forceShutdown" value="false" /> 
    </bean> 
 
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
    	<!-- changed by gcla : async processes in cocon do need larger value than 300 secs (value before) -->
        <property name="transactionTimeout" value="43200" />
    </bean> 
 
    <bean id="jtaTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
       <property name="transactionManager" ref="atomikosUserTransactionManager" /> 
       <property name="userTransaction" ref="atomikosUserTransaction" /> 
       <property name="transactionSynchronizationName" value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
       <property name="allowCustomIsolationLevels" value="true" />
       <property name="nestedTransactionAllowed" value="true" />
    </bean>
 
    <bean id="dataSource" class="org.apache.commons.dbcp2.managed.BasicManagedDataSource" destroy-method="close" lazy-init="false">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <property name="initialSize" value="1" />
        <property name="maxTotal" value="${db.connection.pool.size}" />
        <property name="maxIdle" value="${db.connection.pool.size}" />
        <property name="minIdle" value="0" />
        <property name="testOnBorrow" value="true" />
        <property name="validationQuery" value="${db.validationQuery}" />
        <property name="timeBetweenEvictionRunsMillis" value="7200000" />
        <property name="minEvictableIdleTimeMillis" value="1800000" />
        <property name="numTestsPerEvictionRun" value="50" />
        <property name="transactionManager" ref="atomikosUserTransactionManager"/>
        <property name="xaDataSourceInstance" ref="oracleXADataSource" />
    </bean>

    <bean id="atomikosDataSourceBean" class="com.atomikos.jdbc.AtomikosDataSourceBean">
        <property name="uniqueResourceName" value="oracle"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${db.url}</prop>
                <prop key="user">${db.username}</prop>
                <prop key="password">${db.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="oracleXADataSource" factory-bean="atomikosDataSourceBean" factory-method="getXaDataSource" destroy-method="close"/>

    <bean id="transactionManagerFactory" class="be.cipal.datasource.api.helper.TransactionManagerFactory" />

    <!-- Below must be made different, but this is as a quick solution to have 2 datasources
         See  Managed Service Factory in chapter 104.6 in http://www.osgi.org/download/r4v42/r4.enterprise.pdf for a possible solution -->
    <bean id="dataSource2" class="org.apache.commons.dbcp2.managed.BasicManagedDataSource" destroy-method="close" lazy-init="false">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url2}" />
        <property name="username" value="${db.username2}" />
        <property name="password" value="${db.password2}" />
        <property name="initialSize" value="1" />
        <property name="maxTotal" value="${db.connection.pool.size}" />
        <property name="maxIdle" value="${db.connection.pool.size}" />
        <property name="minIdle" value="0" />
        <property name="testOnBorrow" value="true" />
        <property name="validationQuery" value="${db.validationQuery}" />
        <property name="timeBetweenEvictionRunsMillis" value="7200000" />
        <property name="minEvictableIdleTimeMillis" value="1800000" />
        <property name="numTestsPerEvictionRun" value="50" />
        <property name="transactionManager" ref="atomikosUserTransactionManager"/>
        <property name="xaDataSourceInstance" ref="oracleXADataSource2" />
    </bean>

    <bean id="atomikosDataSourceBean2" class="com.atomikos.jdbc.AtomikosDataSourceBean">
        <property name="uniqueResourceName" value="oracle2"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${db.url2}</prop>
                <prop key="user">${db.username2}</prop>
                <prop key="password">${db.password2}</prop>
            </props>
        </property>
    </bean>

    <bean id="oracleXADataSource2" factory-bean="atomikosDataSourceBean2" factory-method="getXaDataSource" destroy-method="close"/>
    <!-- Above must be made different, but this is as a quick solution to have 2 datasources -->

</beans>