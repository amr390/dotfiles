package be.cipal.csf.blockade.domain.test.exposed.impl;

import java.util.Date;

import be.cipal.common.osgi.testframework.api.util.RandomUtils;
import be.cipal.csf.blockade.domain.api.BlokkeringFacade;
import be.cipal.csf.blockade.domain.api.BlokkeringPartij;
import be.cipal.csf.blockade.domain.api.BlokkeringsType;
import be.cipal.csf.blockade.domain.test.exposed.api.BlokkeringPartijBuilderForTests;

/**
 * A Builder to create BlokkeringPartij Entities for tests.
 * TODO: further implementation using all fields of BlokkeringPartij.
 * @author Sven Maes
 */
public class BlokkeringPartijBuilderForTestsImpl implements BlokkeringPartijBuilderForTests {

	private BlokkeringsType blokkeringsType;
	private Date geblokkeerdVan;
//	private Date geblokkeerdTot;
//	private Date dateDelete;
//	private String dossierNummer;
//	private String informatie;
//	private String strInternalUserDelete;
//	private Boolean gedeblokkeerd;
//	private PartyProxyImpl partyProxy;
//	private TaxTypeProxyImpl taxTypeProxy;
//	private TaxPeriodProxyImpl taxPeriodProxy;
//	private BlockedParamValueImpl blockedParamValue;
	
	private final BlokkeringFacade blokkeringFacade;

	public BlokkeringPartijBuilderForTestsImpl(BlokkeringFacade blokkeringFacade) {
		this.blokkeringFacade = blokkeringFacade;
	}

	@Override
	public BlokkeringPartij build() {
		BlokkeringPartij instance = blokkeringFacade.newBlokkeringPartij();
		instance.setBlokkeringsType(blokkeringsType);
		instance.setGeblokkeerdVan(geblokkeerdVan);
		return instance;
	}

	@Override
	public BlokkeringPartijBuilderForTests withDefaults() {
		return this
				.withGeblokkeerdVan(BlokkeringPartijBuilderForTests.DEFAULT_GEBLOKKEERD_VAN);
	}
	
	@Override
	public BlokkeringPartijBuilderForTests withRandoms() {
		return this
				.withGeblokkeerdVan(RandomUtils.randomDate());
	}
	
	@Override
	public BlokkeringPartijBuilderForTests withBlokkeringsType(BlokkeringsType blokkeringsType) {
		this.blokkeringsType = blokkeringsType;
		return this;
	}

	@Override
	public BlokkeringPartijBuilderForTests withGeblokkeerdVan(Date geblokkeerdVan) {
		this.geblokkeerdVan = geblokkeerdVan;
		return this;
	}
}