import java.util.List;
import java.util.ArrayList;
import javax.xml.bind.*;
import javax.xml.namespace.QName;
import javax.xml.transform.stream.StreamSource;

class PhoneNumber {

    private String foo;
    private String bar;

    public String getType() {
        return foo;
    }

    public void setType(String type) {
        this.foo = type;
    }

    public String getNumber() {
        return bar;
    }

    public void setNumber(String number) {
        this.bar = number;
    }

}

interface CustomerI{
    public String getFirstName();
    public void setFirstName(String firstName);
    public String getLastName();
    public void setLastName(String lastName);
    public List<PhoneNumber> getPhoneNumbers();
    public void setPhoneNumbers(List<PhoneNumber> phoneNumbers);
}

class CustomerLast {
    private String lastName;

    public String getLastName(){
        return lastName;
    }

    public void setLastName(String lastName){
        this.lastName = lastName;
    }
}

class Customer extends CustomerLast implements CustomerI{

    private String firstName;
    private List<PhoneNumber> phoneNumbers;

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public List<PhoneNumber> getPhoneNumbers() {
        return phoneNumbers;
    }

    public void setPhoneNumbers(List<PhoneNumber> phoneNumbers) {
        this.phoneNumbers = phoneNumbers;
    }

}

class Customers {
    List<Customer> customers = new ArrayList<>();

    public List<Customer> getCustomers(){
        return this.customers;
    }

    public void setCustomers(List<Customer> customers){
        this.customers = customers;
    }
}

public class JBContext{

    public static void main(String[] args){
        try{
            //JAXBContext jc = JAXBContext.newInstance(Customer.class);
            //StreamSource xml = new StreamSource("input.xml");
            //Unmarshaller unmarshaller = jc.createUnmarshaller();
            //JAXBElement<Customer> je1 = unmarshaller.unmarshal(xml, Customer.class);
            //Customer customer = je1.getValue();

            StreamSource xml = new StreamSource("input.xml");
            JAXBElement<Customers> je1 =(JAXBElement<Customers>) readFromXml(xml, Customers.class);
            Customers customers = je1.getValue();

            System.out.println(customers.getCustomers().size());
            //System.out.println (String.format("Customer info %s, %s, %s",  customer.getFirstName(), customer.getLastName(), customer.getPhoneNumbers()));
        }catch(JAXBException e){
            e.printStackTrace();
        }
    }

    public static JAXBElement<?> readFromXml(StreamSource xml, Class<?> t) throws JAXBException{
        JAXBElement<?> je1 = null;
        //try {
            JAXBContext jc = JAXBContext.newInstance(t);
            Unmarshaller unmarshaller = jc.createUnmarshaller();
            je1 = unmarshaller.unmarshal(xml, t);

        //} catch (JAXBException e) {
            // TODO Auto-generated catch block
            //e.printStackTrace();
        //}
        return je1;

    }
}
