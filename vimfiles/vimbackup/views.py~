from django.views.generic import TemplateView
from rest_framework import generics, status
from rest_framework.views import APIView
from rest_framework.response import Response

from core.models import PayableVAT, DeductibleVAT, Concept, Contributor, Client
from core.serializers import DeductibleVATSerializer, PayableVATSerializer,\
    ConceptSerializer, ContributorSerializer, ClientSerializer


class OnePageAppView(TemplateView):
    template_name = "vatbook/one_page_app.html"


class ContributorList(generics.ListCreateAPIView):
    """
    API end point to retrieve a list of available concepts to be used
    within an invoice
    """
    queryset = Contributor.objects.all()
    serializer_class = ContributorSerializer


class ContributorDetail(generics.RetrieveUpdateDestroyAPIView):
    """
    API end point to update or create a contributors to be used
    to add them invoices
    """
    queryset = Contributor.objects.all()
    serializer_class = ContributorSerializer


class ClientList(generics.ListCreateAPIView):
    """
    API end point to retrieve a list of available clients to be used
    within an invoice
    """
    queryset = Client.objects.all()
    serializer_class = ClientSerializer


class ClientDetail(generics.RetrieveUpdateDestroyAPIView):
    """
    API end point to update or create a clients to be used
    to add them invoices
    """
    queryset = Client.objects.all()
    serializer_class = ClientSerializer


class ConceptList(generics.ListCreateAPIView):
    """
    API end point to retrieve a list of available concepts to be used
    within an invoice
    """
    queryset = Concept.objects.all()
    serializer_class = ConceptSerializer


class ConceptDetail(generics.RetrieveUpdateDestroyAPIView):
    """
    API end point to update or create a concepts to be used
    within an invoice
    """
    queryset = Concept.objects.all()
    serializer_class = ConceptSerializer


class PayableVATList(generics.ListCreateAPIView):
    """
    API end point to retrieve a list of payable invoices or create a new
    payable invoice.
    """
    queryset = PayableVAT.objects.all()
    serializer_class = PayableVATSerializer

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['concept_list'] = Concept.objects.all()
        return context


class PayableVATDetail(generics.RetrieveUpdateDestroyAPIView):
    """
    API endpoint that allows interact with vat invoices
    """
    queryset = PayableVAT.objects.all()
    serializer_class = PayableVATSerializer


class DeductibleVATList(generics.ListCreateAPIView):
    """
    API end point to retrieve a list of deductible invoices or create a new
    deductible invoice.
    """
    queryset = DeductibleVAT.objects.all()
    serializer_class = DeductibleVATSerializer


class DeductibleVATDetail(generics.RetrieveUpdateDestroyAPIView):
    """
    API endpoint that allows interact with vat invoices
    """
    queryset = DeductibleVAT.objects.all()
    serializer_class = DeductibleVATSerializer


class VatbookSummary(APIView):
    """
    End point to return the list of income and tax invoices in order to
    generate the summary and reporting.
    """

    def get(self, request, *args, **kwargs):
        return response
