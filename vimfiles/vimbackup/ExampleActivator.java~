package be.cipal.osgibasicservletbundle.internal;

import java.util.Dictionary;
import java.util.Properties;

import org.osgi.framework.BundleActivator;
import org.osgi.framework.BundleContext;

import be.cipal.osgibasicservletbundle.ExampleService;

import javax.servlet.Servlet;
//import be.cipal.osgibasicservletbundle.internal.BasicServlet;

/**
 * Extension of the default OSGi bundle activator
 */
public final class ExampleActivator
    implements BundleActivator
{
    /**
     * Called whenever the OSGi framework starts our bundle
     */
    public void start( BundleContext bc )
        throws Exception
    {
        Hashtabl<String, String> props2 = new Hashtable<String, String>();
        props2.put("alias", "/hello1");


        System.out.println( "STARTING be.cipal.osgibasicservletbundle" );

        System.out.println( "REGISTER be.cipal.osgibasicservletbundle.BasicServlet" );
        BasicServlet ourServlet = new BasicServlet("servlet1");
        bc.registerService(Servlet.class.getName(), ourServlet, props2);

        Dictionary props = new Properties();
        // add specific service properties here...

        System.out.println( "REGISTER be.cipal.osgibasicservletbundle.ExampleService" );

        // Register our example service implementation in the OSGi service registry
        bc.registerService( ExampleService.class.getName(), new ExampleServiceImpl(), props );
    }

    /**
     * Called whenever the OSGi framework stops our bundle
     */
    public void stop( BundleContext bc )
        throws Exception
    {
        System.out.println( "STOPPING be.cipal.osgibasicservletbundle" );

        // no need to unregister our service - the OSGi framework handles it for us
    }
}

