@Grab(group='com.github.groovy-wslite', module='groovy-wslite', version='0.8.0')
import wslite.soap.*

//def serverURL = "http://localhost:8888/ini/services/housenumber"
def serverURL = "http://demo-styx.int.cipal.be:6001/ini/services/housenumber"
//def serverURL = "localhost:8888/ini/services/housenumber?wsdl"
//def cityIds = [ 69,
//37,
//45,
//5,
//6,
//7,
//48,
//466,
//491,
//498]

def cityIds = [
498,
10,
502,
472,
473,
493,
17,
474,
19,
42,
23
]
def okStatus = { response ->
    return response.httpResponse.statusMessage = 'OK'
}

def hnPositions = { envelope ->
    println "creating client"
    def client = new SOAPClient(serverURL)
    println "sending request envelope based"
    def response = client.send(envelope)

    println "returning response"
    response
}

try {

    def threads = []

    cityIds.each{ cityId ->
        def envelope = """
        <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:hous="http://www.cipal.be/styx/housenumberpositions">
           <soapenv:Header/>
           <soapenv:Body>
              <hous:listHousenumberPositionsForCity>
                 <!--Optional:-->
                 <request>
                    <metaData>
                       <requestId>1</requestId>
                       <callerId>styx</callerId>
                       <applicationId>SOAPUI</applicationId>
                    </metaData>
                    <selectionCriteria>
                       <city>
                        <crabId>${cityId}</crabId>
                       </city>
                       <positions>
                          <coordinateSystem>EPSG:31370</coordinateSystem>
                       </positions>
                       <language>
                        <iso6391Code>nl</iso6391Code>
                    </language>
                    </selectionCriteria>
                 </request>
              </hous:listHousenumberPositionsForCity>
           </soapenv:Body>
        </soapenv:Envelope>
        """

        def th = new Thread({
            println "new thread for ${cityId}"
            def response = hnPositions(envelope)
            response.body.listHousenumberPositionsForCityResponse.response.metaData.messages.message.eachWithIndex{ msg, i ->
                println  "========= MESSAGE ${i}"
                println msg
            }
        })

        threads << th
    }

    threads.each{ th ->
        th.start()
    }

    //response.body.listHousenumberPositionsForCityResponse.response.metaData.messages.message.eachWithIndex{ msg, i ->
        //println  "========= MESSAGE ${i}"
        //println msg
    //}

} catch (SOAPFaultException sfe) {
    println sfe.message // faultcode/faultstring for 1.1 or Code/Reason for 1.2
    println sfe.text    // prints SOAP Envelope
    println sfe.httpResponse.statusCode
    println sfe.fault.detail.text()
}
