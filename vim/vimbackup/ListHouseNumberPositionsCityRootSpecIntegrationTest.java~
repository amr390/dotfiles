package be.cipal.styx.address.domain.impl;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.experimental.categories.Category;
import org.junit.runner.RunWith;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.AbstractTransactionalJUnit4SpringContextTests;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.transaction.TransactionConfiguration;
import org.springframework.transaction.annotation.Transactional;

import be.cipal.common.domain.testutils.IntegrationTest;
import be.cipal.styx.address.domain.api.City;
import be.cipal.styx.address.domain.api.criteria.CityCriteria;
import be.cipal.styx.address.domain.api.criteria.CountryCriteria;
import be.cipal.styx.address.domain.api.criteria.ListHouseNumberPositionsCriteria;
import be.cipal.styx.address.domain.helper.TestHelper;

@RunWith(SpringJUnit4ClassRunner.class)
@Category(IntegrationTest.class)
@ContextConfiguration(locations = {
        "/META-INF/spring/domain-testutils-jpa-database-test-context.xml" })
@TransactionConfiguration
@Transactional
public class ListHouseNumberPositionsCityRootSpecIntegrationTest extends AbstractTransactionalJUnit4SpringContextTests {

    private ListHouseNumberPositionsCityRootSpec spec;

    @PersistenceContext(name="styx-domain")
    private EntityManager em;
    private CriteriaBuilder cb;
    private CriteriaQuery<CityImpl> cq;
    private Root<CityImpl> root;

    private City testCity;

    @BeforeClass
    public void setupCriteria(){
   }

    @Before
    public void setUp() throws Exception {
        cb = em.getCriteriaBuilder();
        cq = cb.createQuery(CityImpl.class);
        root = cq.from(CityImpl.class);
    }

    @Test
    public void testFindPositionsByCityStyxId(){
        ListHouseNumberPositionsCriteria criteria = buildDefaultCriteria();
        criteria.setCountry(null);
        criteria.setLanguageCode(null);
        criteria.getStreetStatuses().clear();
        criteria.getHouseNumberStatuses().clear();
        criteria.getPositionOrigins().clear();
        criteria.setCoordinateSystem(null);

        spec = new ListHouseNumberPositionsCityRootSpec(criteria);





    }

    private ListHouseNumberPositionsCriteria buildDefaultCriteria(){
        ListHouseNumberPositionsCriteria criteria = new ListHouseNumberPositionsCriteria();
        CountryCriteria country = new CountryCriteria();
        country.setNisCode("150");

        CityCriteria city = new CityCriteria();
        city.setStyxId("CITY_CRAB_-1");

        List<String> stStatus = new ArrayList<>();
        stStatus.add("1");
        stStatus.add("2");

        List<String> hnStatus = new ArrayList<>();
        hnStatus.add("1");
        hnStatus.add("2");

        List<String> origins = new ArrayList<>();
        origins.add("1");
        origins.add("2");

        criteria.setCountry(country);
        criteria.setCity(city);
        criteria.getStreetStatuses().addAll(stStatus);
        criteria.getHouseNumberStatuses().addAll(hnStatus);
        criteria.getPositionOrigins().addAll(origins);
        criteria.setCoordinateSystem("EPSG:303170");
        criteria.setLanguageCode("NL");

        return criteria;
    }

}
