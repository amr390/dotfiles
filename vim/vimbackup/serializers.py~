from rest_framework import serializers
from core.models import PayableVAT, DeductibleVAT, Concept, Contributor, Client


class ClientSerializer(serializers.HyperlinkedModelSerializer):
    class Meta:
        model = Client
        fields = ('id', 'identifier', 'full_name')


class ContributorSerializer(serializers.HyperlinkedModelSerializer):
    class Meta:
        model = Contributor
        fields = ('id', 'identifier', 'first_name', 'last_name', 'email')


class ConceptSerializer(serializers.HyperlinkedModelSerializer):
    class Meta:
        model = Concept
        fields = ('id', 'name', 'description', 'vat_type', 'tax_type')


class PayableVATSerializer(serializers.ModelSerializer):
    """
    Serializer: for payable invoice
    """
    concept = ConceptSerializer
    contributor = ContributorSerializer
    client = ClientSerializer

    def create(self, validated_data):
        # Create the invoice instance
        instance = PayableVAT(**validated_data)
        instance.save()

        return instance

    def update(self, instance, validated_data):
        instance.invoice_number = validated_data['invoice_number']
        instance.concept = validated_data['concept']
        instance.contributor = validated_data['contributor']
        instance.client = validated_data['client']
        instance.base_cost = validated_data['base_cost']
        instance.vat_cost = validated_data['vat_cost']
        instance.tax_cost = validated_data['tax_cost']
        instance.total_cost = validated_data['total_cost']
        instance.date_issue = validated_data['date_issue']
        instance.date_listing = validated_data['date_listing']
        instance.save()

        return instance

    class Meta:
        model = PayableVAT
        fields = ('id', 'invoice_number', 'concept', 'contributor', 'client',
                  'base_cost', 'vat_cost', 'tax_cost', 'total_cost',
                  'date_issue', 'date_listing')


class DeductibleVATSerializer(serializers.ModelSerializer):
    """
    Serializer: for taxes invoice
    """
    concept = ConceptSerializer
    contributor = ContributorSerializer

    class Meta:
        model = DeductibleVAT
        fields = ('id', 'concept', 'contributor', 'vat_cost', 'base_cost',
                  'effective_cost', 'percent_applied', 'date_issue',
                  'date_listing')

    def create(self, validated_data):
        instance = DeductibleVAT(**validated_data)
        instance.save()

        return instance

    def update(self, instance, validated_data):
        instance.concept = validated_data['concept']
        instance.contributor = validated_data['contributor']
        instance.base_cost = validated_data['base_cost']
        instance.vat_cost = validated_data['vat_cost']
        instance.effective_cost = validated_data['effective_cost']
        instance.percent_applied = validated_data['percent_applied']
        instance.date_issue = validated_data['date_issue']
        instance.date_listing = validated_data['date_listing']
        instance.save()

        return instance


class IncomeSerializer(serializers.Serializer):
    invoice_number = serializers.IntegerField()
    concept = serializers.CharField(max_length=64)
    concept_id = serializers.IntegerField()
    base_cost = serializers.DecimalField(max_digits=8, decimal_places=2)
    vat_cost = serializers.DecimalField(max_digits=8, decimal_places=2)
    tax_cost = serializers.DecimalField(max_digits=8, decimal_places=2)
    vat_type = serializers.CharField(max_length=2)
    tax_type = serializers.CharField(max_length=2)
    total_cost = serializers.DecimalField(max_digits=8, decimal_places=2)


class TaxSerializer(serializers.Serializer):
    invoice_number = serializers.IntegerField()
    concept = serializers.CharField(max_length=64)
    concept_id = serializers.IntegerField()
    base_cost = serializers.DecimalField(max_digits=8, decimal_places=2)
    vat_cost = serializers.DecimalField(max_digits=8, decimal_places=2)
    effective_cost = serializers.DecimalField(max_digits=8, decimal_places=2)
    vat_type = serializers.CharField(max_length=2)
    percent_applied = serializers.DecimalField(max_length=4, decimal_places=2)
    total_cost = serializers.DecimalField(max_digits=8, decimal_places=2)


class PeriodSerializer(serializers.Serializer):
    incomes = IncomeSerializer(many=True)
    taxes = TaxSerializer(many=True)


class ExerciseSerializer(serializers.Serializer):
    year = serializers.CharField(max_length=4)
    period1 = PeriodSerializer()
    period2 = PeriodSerializer()
    period3 = PeriodSerializer()
    period4 = PeriodSerializer()


class VatbookSummarySerializer(serializers.Serializer):
    full_name = serializers.CharField(max_length=255)
    identifier = serializers.CharField(max_length=15)
    exercices = ExerciseSerializer(many=True)
