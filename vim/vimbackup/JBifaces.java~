import java.util.List;
import java.util.ArrayList;
import javax.xml.bind.*;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.namespace.QName;
import javax.xml.transform.stream.StreamSource;

class PhoneNumber {

    private String foo;
    private String bar;

    public String getType() {
        return foo;
    }

    public void setType(String type) {
        this.foo = type;
    }

    public String getNumber() {
        return bar;
    }

    public void setNumber(String number) {
        this.bar = number;
    }

}

interface Last{
    public String getLast();
    public void setLast(String lastName);
}

@XmlRootElement
class CustomerLast implements Last{
    private String lastName;

    public String getLast(){
        return lastName;
    }

    public void setLast(String lastName){
        this.lastName = lastName;
    }

    public String toString(){
        return lastName;
    }
}


@XmlRootElement
class Customer {

    private String firstName;
    private String lastName;
    private List<PhoneNumber> phoneNumbers;

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName(){
        return lastName;
    }
    public void setLastName(String lastName){
        this.lastName = lastName;
    }

    public List<PhoneNumber> getPhoneNumbers() {
        return phoneNumbers;
    }

    public void setPhoneNumbers(List<PhoneNumber> phoneNumbers) {
        this.phoneNumbers = phoneNumbers;
    }

}

public class JBifaces{

    public static void main(String[] args){
        try{
            //JAXBContext jc = JAXBContext.newInstance(Customer.class);
            //StreamSource xml = new StreamSource("input.xml");
            //Unmarshaller unmarshaller = jc.createUnmarshaller();
            //JAXBElement<Customer> je1 = unmarshaller.unmarshal(xml, Customer.class);
            //Customer customer = je1.getValue();

            StreamSource xml = new StreamSource("input.xml");
            JAXBElement<Customer> je1 =(JAXBElement<Customer>) readFromXml(xml, Customer.class);
            Customer customer = (Customer) je1.getValue();

            System.out.println (String.format("Customer info %s, %s, %s",
                        customer.getFirstName(),
                        customer.getLastName(),
                        customer.getPhoneNumbers()));
        }catch(JAXBException e){
            e.printStackTrace();
        }
    }

    public static JAXBElement<?> readFromXml(StreamSource xml, Class<?> t) throws JAXBException{
        JAXBElement<?> je1 = null;
        //try {
            JAXBContext jc = JAXBContext.newInstance(t);
            Unmarshaller unmarshaller = jc.createUnmarshaller();
            je1 = unmarshaller.unmarshal(xml, t);

        //} catch (JAXBException e) {
            // TODO Auto-generated catch block
            //e.printStackTrace();
        //}
        return je1;

    }
}
